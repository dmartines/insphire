[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar Mongo = Package.mongo.Mongo;\nvar _ = Package.underscore._;\nvar $ = Package.jquery.$;\nvar jQuery = Package.jquery.jQuery;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\nvar Router = Package['iron:router'].Router;\nvar RouteController = Package['iron:router'].RouteController;\nvar Iron = Package['iron:core'].Iron;\n\n/* Package-scope variables */\nvar __coffeescriptShare;\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/manuelschoebel_ms-seo/packages/manuelschoebel_ms-seo.js                                               //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n(function () {                                                                                                    // 1\n                                                                                                                  // 2\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// packages/manuelschoebel:ms-seo/seo_collection.coffee.js                                                     //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nthis.SeoCollection = new Mongo.Collection('seo');                                                                 // 10\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  // 12\n}).call(this);                                                                                                    // 13\n                                                                                                                  // 14\n                                                                                                                  // 15\n                                                                                                                  // 16\n                                                                                                                  // 17\n                                                                                                                  // 18\n                                                                                                                  // 19\n(function () {                                                                                                    // 20\n                                                                                                                  // 21\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// packages/manuelschoebel:ms-seo/seo.coffee.js                                                                //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar SEO, escapeHtmlAttribute, getCurrentRouteName;                                                                // 29\n                                                                                                                  // 30\nSEO = {                                                                                                           // 31\n  settings: {                                                                                                     // 32\n    title: '',                                                                                                    // 33\n    rel_author: '',                                                                                               // 34\n    meta: [],                                                                                                     // 35\n    og: [],                                                                                                       // 36\n    twitter: [],                                                                                                  // 37\n    ignore: {                                                                                                     // 38\n      meta: ['fragment'],                                                                                         // 39\n      link: ['stylesheet', 'icon', 'apple-touch-icon']                                                            // 40\n    },                                                                                                            // 41\n    auto: {                                                                                                       // 42\n      twitter: true,                                                                                              // 43\n      og: true,                                                                                                   // 44\n      set: ['description', 'url', 'title']                                                                        // 45\n    }                                                                                                             // 46\n  },                                                                                                              // 47\n  ignore: function(type, value) {                                                                                 // 48\n    if (this.settings.ignore[type] && _.indexOf(this.settings.ignore[type], value) === -1) {                      // 49\n      return this.settings.ignore[type].push(value);                                                              // 50\n    }                                                                                                             // 51\n  },                                                                                                              // 52\n  config: function(settings) {                                                                                    // 53\n    return _.extend(this.settings, settings);                                                                     // 54\n  },                                                                                                              // 55\n  set: function(options, clearBefore) {                                                                           // 56\n    var currentRouter, k, l, link, m, meta, o, og, twitter, url, v, _i, _j, _k, _l, _len, _len1, _len2, _len3;    // 57\n    if (clearBefore == null) {                                                                                    // 58\n      clearBefore = true;                                                                                         // 59\n    }                                                                                                             // 60\n    if (clearBefore) {                                                                                            // 61\n      this.clearAll();                                                                                            // 62\n    }                                                                                                             // 63\n    currentRouter = Router.current();                                                                             // 64\n    if (currentRouter) {                                                                                          // 65\n      url = Router.url(currentRouter.route.getName(), currentRouter.params);                                      // 66\n    }                                                                                                             // 67\n    meta = options.meta;                                                                                          // 68\n    og = options.og;                                                                                              // 69\n    link = options.link;                                                                                          // 70\n    twitter = options.twitter;                                                                                    // 71\n    if (options.title) {                                                                                          // 72\n      this.setTitle(options.title);                                                                               // 73\n    }                                                                                                             // 74\n    if (options.url) {                                                                                            // 75\n      this.setUrl(options.url);                                                                                   // 76\n    } else if (url) {                                                                                             // 77\n      this.setUrl(url);                                                                                           // 78\n    }                                                                                                             // 79\n    if (meta && _.isArray(meta)) {                                                                                // 80\n      for (_i = 0, _len = meta.length; _i < _len; _i++) {                                                         // 81\n        m = meta[_i];                                                                                             // 82\n        this.setMeta(\"name='\" + m.key + \"'\", m.value);                                                            // 83\n      }                                                                                                           // 84\n    } else if (meta && _.isObject(meta)) {                                                                        // 85\n      for (k in meta) {                                                                                           // 86\n        v = meta[k];                                                                                              // 87\n        this.setMeta(\"name='\" + k + \"'\", v);                                                                      // 88\n      }                                                                                                           // 89\n    }                                                                                                             // 90\n    if (og && _.isArray(og)) {                                                                                    // 91\n      for (_j = 0, _len1 = og.length; _j < _len1; _j++) {                                                         // 92\n        o = og[_j];                                                                                               // 93\n        this.setMeta(\"property='og:\" + o.key + \"'\", o.value);                                                     // 94\n      }                                                                                                           // 95\n    } else if (og && _.isObject(og)) {                                                                            // 96\n      for (k in og) {                                                                                             // 97\n        v = og[k];                                                                                                // 98\n        this.setMeta(\"property='og:\" + k + \"'\", v);                                                               // 99\n      }                                                                                                           // 100\n    }                                                                                                             // 101\n    if (link && _.isArray(link)) {                                                                                // 102\n      for (_k = 0, _len2 = link.length; _k < _len2; _k++) {                                                       // 103\n        l = link[_k];                                                                                             // 104\n        this.setLink(l.rel, l.href);                                                                              // 105\n      }                                                                                                           // 106\n    } else if (link && _.isObject(link)) {                                                                        // 107\n      for (k in link) {                                                                                           // 108\n        v = link[k];                                                                                              // 109\n        this.setLink(k, v);                                                                                       // 110\n      }                                                                                                           // 111\n    }                                                                                                             // 112\n    if (twitter && _.isArray(twitter)) {                                                                          // 113\n      for (_l = 0, _len3 = twitter.length; _l < _len3; _l++) {                                                    // 114\n        o = twitter[_l];                                                                                          // 115\n        this.setMeta(\"property='twitter:\" + o.key + \"'\", o.value);                                                // 116\n      }                                                                                                           // 117\n    } else if (twitter && _.isObject(twitter)) {                                                                  // 118\n      for (k in twitter) {                                                                                        // 119\n        v = twitter[k];                                                                                           // 120\n        this.setMeta(\"property='twitter:\" + k + \"'\", v);                                                          // 121\n      }                                                                                                           // 122\n    }                                                                                                             // 123\n    if (options.rel_author) {                                                                                     // 124\n      return this.setLink('author', options.rel_author);                                                          // 125\n    }                                                                                                             // 126\n  },                                                                                                              // 127\n  clearAll: function() {                                                                                          // 128\n    var $l, $m, controlled, ignored, l, m, _i, _j, _len, _len1, _ref, _ref1;                                      // 129\n    _ref = $(\"meta\");                                                                                             // 130\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                           // 131\n      m = _ref[_i];                                                                                               // 132\n      $m = $(m);                                                                                                  // 133\n      controlled = $m.attr('name') || $m.attr('property');                                                        // 134\n      ignored = false;                                                                                            // 135\n      if ($m.attr('name') && _.indexOf(SEO.settings.ignore.meta, $m.attr('name')) > -1) {                         // 136\n        ignored = true;                                                                                           // 137\n      } else if ($m.attr('property') && _.indexOf(SEO.settings.ignore.meta, $m.attr('property')) > -1) {          // 138\n        ignored = true;                                                                                           // 139\n      }                                                                                                           // 140\n      if (!ignored && controlled) {                                                                               // 141\n        $m.remove();                                                                                              // 142\n      }                                                                                                           // 143\n    }                                                                                                             // 144\n    _ref1 = $(\"link\");                                                                                            // 145\n    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {                                                        // 146\n      l = _ref1[_j];                                                                                              // 147\n      $l = $(l);                                                                                                  // 148\n      controlled = $l.attr('rel');                                                                                // 149\n      if (_.indexOf(SEO.settings.ignore.link, $l.attr('rel')) === -1 && controlled) {                             // 150\n        $l.remove();                                                                                              // 151\n      }                                                                                                           // 152\n    }                                                                                                             // 153\n    this.set(this.settings, false);                                                                               // 154\n    return this.setTitle(this.settings.title);                                                                    // 155\n  },                                                                                                              // 156\n  setTitle: function(title) {                                                                                     // 157\n    document.title = title;                                                                                       // 158\n    if (_.indexOf(this.settings.auto.set, 'title') !== -1) {                                                      // 159\n      if (this.settings.auto.twitter) {                                                                           // 160\n        this.setMeta('property=\"twitter:title\"', title);                                                          // 161\n      }                                                                                                           // 162\n      if (this.settings.auto.og) {                                                                                // 163\n        return this.setMeta('property=\"og:title\"', title);                                                        // 164\n      }                                                                                                           // 165\n    }                                                                                                             // 166\n  },                                                                                                              // 167\n  setUrl: function(url) {                                                                                         // 168\n    if (_.indexOf(this.settings.auto.set, 'url') !== -1) {                                                        // 169\n      if (this.settings.auto.twitter) {                                                                           // 170\n        this.setMeta('property=\"twitter:url\"', url);                                                              // 171\n      }                                                                                                           // 172\n      if (this.settings.auto.og) {                                                                                // 173\n        return this.setMeta('property=\"og:url\"', url);                                                            // 174\n      }                                                                                                           // 175\n    }                                                                                                             // 176\n  },                                                                                                              // 177\n  setLink: function(rel, href, unique) {                                                                          // 178\n    var h, _i, _len;                                                                                              // 179\n    if (unique == null) {                                                                                         // 180\n      unique = true;                                                                                              // 181\n    }                                                                                                             // 182\n    if (unique) {                                                                                                 // 183\n      this.removeLink(rel);                                                                                       // 184\n    }                                                                                                             // 185\n    if (_.isArray(href)) {                                                                                        // 186\n      for (_i = 0, _len = href.length; _i < _len; _i++) {                                                         // 187\n        h = href[_i];                                                                                             // 188\n        this.setLink(rel, h, false);                                                                              // 189\n      }                                                                                                           // 190\n      return;                                                                                                     // 191\n    }                                                                                                             // 192\n    if (href) {                                                                                                   // 193\n      return $('head').append(\"<link rel='\" + rel + \"' href='\" + href + \"'>\");                                    // 194\n    }                                                                                                             // 195\n  },                                                                                                              // 196\n  removeLink: function(rel) {                                                                                     // 197\n    return $(\"link[rel='\" + rel + \"']\").remove();                                                                 // 198\n  },                                                                                                              // 199\n  setMeta: function(attr, content, unique) {                                                                      // 200\n    var name, v, _i, _len;                                                                                        // 201\n    if (unique == null) {                                                                                         // 202\n      unique = true;                                                                                              // 203\n    }                                                                                                             // 204\n    if (unique) {                                                                                                 // 205\n      this.removeMeta(attr);                                                                                      // 206\n    }                                                                                                             // 207\n    if (_.isArray(content)) {                                                                                     // 208\n      for (_i = 0, _len = content.length; _i < _len; _i++) {                                                      // 209\n        v = content[_i];                                                                                          // 210\n        this.setMeta(attr, v, false);                                                                             // 211\n      }                                                                                                           // 212\n      return;                                                                                                     // 213\n    }                                                                                                             // 214\n    if (!content) {                                                                                               // 215\n      return;                                                                                                     // 216\n    }                                                                                                             // 217\n    content = escapeHtmlAttribute(content);                                                                       // 218\n    $('head').append(\"<meta \" + attr + \" content='\" + content + \"'>\");                                            // 219\n    name = attr.replace(/\"|'/g, '').split('=')[1];                                                                // 220\n    if (_.indexOf(this.settings.auto.set, name) !== -1) {                                                         // 221\n      if (this.settings.auto.twitter) {                                                                           // 222\n        this.setMeta(\"property='twitter:\" + name + \"'\", content);                                                 // 223\n      }                                                                                                           // 224\n      if (this.settings.auto.og) {                                                                                // 225\n        return this.setMeta(\"property='og:\" + name + \"'\", content);                                               // 226\n      }                                                                                                           // 227\n    }                                                                                                             // 228\n  },                                                                                                              // 229\n  removeMeta: function(attr) {                                                                                    // 230\n    return $(\"meta[\" + attr + \"]\").remove();                                                                      // 231\n  }                                                                                                               // 232\n};                                                                                                                // 233\n                                                                                                                  // 234\nthis.SEO = SEO;                                                                                                   // 235\n                                                                                                                  // 236\nescapeHtmlAttribute = function(string) {                                                                          // 237\n  return (\"\" + string).replace(/'/g, \"&apos;\").replace(/\"/g, \"&quot;\");                                           // 238\n};                                                                                                                // 239\n                                                                                                                  // 240\ngetCurrentRouteName = function() {                                                                                // 241\n  var routeName, router;                                                                                          // 242\n  router = Router.current();                                                                                      // 243\n  if (!router) {                                                                                                  // 244\n    return;                                                                                                       // 245\n  }                                                                                                               // 246\n  routeName = router.route.getName();                                                                             // 247\n  return routeName;                                                                                               // 248\n};                                                                                                                // 249\n                                                                                                                  // 250\nDeps.autorun(function() {                                                                                         // 251\n  var currentRouteName;                                                                                           // 252\n  currentRouteName = getCurrentRouteName();                                                                       // 253\n  if (!currentRouteName) {                                                                                        // 254\n    return;                                                                                                       // 255\n  }                                                                                                               // 256\n  return Meteor.subscribe('seoByRouteName', currentRouteName);                                                    // 257\n});                                                                                                               // 258\n                                                                                                                  // 259\nDeps.autorun(function() {                                                                                         // 260\n  var currentRouteName, settings;                                                                                 // 261\n  if (!SEO) {                                                                                                     // 262\n    return;                                                                                                       // 263\n  }                                                                                                               // 264\n  currentRouteName = getCurrentRouteName();                                                                       // 265\n  settings = SeoCollection.findOne({                                                                              // 266\n    route_name: currentRouteName                                                                                  // 267\n  }) || {};                                                                                                       // 268\n  return SEO.set(settings);                                                                                       // 269\n});                                                                                                               // 270\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  // 272\n}).call(this);                                                                                                    // 273\n                                                                                                                  // 274\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['manuelschoebel:ms-seo'] = {};\n\n})();\n","servePath":"/packages/manuelschoebel_ms-seo.js","sourceMap":{"version":3,"sources":["/packages/manuelschoebel_ms-seo/packages/manuelschoebel_ms-seo.js"],"names":[],"mappingswH","file":"/packages/manuelschoebel_ms-seo.js","sourcesContent":["(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// packages/manuelschoebel:ms-seo/seo_collection.coffee.js                                                     //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nthis.SeoCollection = new Mongo.Collection('seo');\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// packages/manuelschoebel:ms-seo/seo.coffee.js                                                                //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar SEO, escapeHtmlAttribute, getCurrentRouteName;\n\nSEO = {\n  settings: {\n    title: '',\n    rel_author: '',\n    meta: [],\n    og: [],\n    twitter: [],\n    ignore: {\n      meta: ['fragment'],\n      link: ['stylesheet', 'icon', 'apple-touch-icon']\n    },\n    auto: {\n      twitter: true,\n      og: true,\n      set: ['description', 'url', 'title']\n    }\n  },\n  ignore: function(type, value) {\n    if (this.settings.ignore[type] && _.indexOf(this.settings.ignore[type], value) === -1) {\n      return this.settings.ignore[type].push(value);\n    }\n  },\n  config: function(settings) {\n    return _.extend(this.settings, settings);\n  },\n  set: function(options, clearBefore) {\n    var currentRouter, k, l, link, m, meta, o, og, twitter, url, v, _i, _j, _k, _l, _len, _len1, _len2, _len3;\n    if (clearBefore == null) {\n      clearBefore = true;\n    }\n    if (clearBefore) {\n      this.clearAll();\n    }\n    currentRouter = Router.current();\n    if (currentRouter) {\n      url = Router.url(currentRouter.route.getName(), currentRouter.params);\n    }\n    meta = options.meta;\n    og = options.og;\n    link = options.link;\n    twitter = options.twitter;\n    if (options.title) {\n      this.setTitle(options.title);\n    }\n    if (options.url) {\n      this.setUrl(options.url);\n    } else if (url) {\n      this.setUrl(url);\n    }\n    if (meta && _.isArray(meta)) {\n      for (_i = 0, _len = meta.length; _i < _len; _i++) {\n        m = meta[_i];\n        this.setMeta(\"name='\" + m.key + \"'\", m.value);\n      }\n    } else if (meta && _.isObject(meta)) {\n      for (k in meta) {\n        v = meta[k];\n        this.setMeta(\"name='\" + k + \"'\", v);\n      }\n    }\n    if (og && _.isArray(og)) {\n      for (_j = 0, _len1 = og.length; _j < _len1; _j++) {\n        o = og[_j];\n        this.setMeta(\"property='og:\" + o.key + \"'\", o.value);\n      }\n    } else if (og && _.isObject(og)) {\n      for (k in og) {\n        v = og[k];\n        this.setMeta(\"property='og:\" + k + \"'\", v);\n      }\n    }\n    if (link && _.isArray(link)) {\n      for (_k = 0, _len2 = link.length; _k < _len2; _k++) {\n        l = link[_k];\n        this.setLink(l.rel, l.href);\n      }\n    } else if (link && _.isObject(link)) {\n      for (k in link) {\n        v = link[k];\n        this.setLink(k, v);\n      }\n    }\n    if (twitter && _.isArray(twitter)) {\n      for (_l = 0, _len3 = twitter.length; _l < _len3; _l++) {\n        o = twitter[_l];\n        this.setMeta(\"property='twitter:\" + o.key + \"'\", o.value);\n      }\n    } else if (twitter && _.isObject(twitter)) {\n      for (k in twitter) {\n        v = twitter[k];\n        this.setMeta(\"property='twitter:\" + k + \"'\", v);\n      }\n    }\n    if (options.rel_author) {\n      return this.setLink('author', options.rel_author);\n    }\n  },\n  clearAll: function() {\n    var $l, $m, controlled, ignored, l, m, _i, _j, _len, _len1, _ref, _ref1;\n    _ref = $(\"meta\");\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      m = _ref[_i];\n      $m = $(m);\n      controlled = $m.attr('name') || $m.attr('property');\n      ignored = false;\n      if ($m.attr('name') && _.indexOf(SEO.settings.ignore.meta, $m.attr('name')) > -1) {\n        ignored = true;\n      } else if ($m.attr('property') && _.indexOf(SEO.settings.ignore.meta, $m.attr('property')) > -1) {\n        ignored = true;\n      }\n      if (!ignored && controlled) {\n        $m.remove();\n      }\n    }\n    _ref1 = $(\"link\");\n    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n      l = _ref1[_j];\n      $l = $(l);\n      controlled = $l.attr('rel');\n      if (_.indexOf(SEO.settings.ignore.link, $l.attr('rel')) === -1 && controlled) {\n        $l.remove();\n      }\n    }\n    this.set(this.settings, false);\n    return this.setTitle(this.settings.title);\n  },\n  setTitle: function(title) {\n    document.title = title;\n    if (_.indexOf(this.settings.auto.set, 'title') !== -1) {\n      if (this.settings.auto.twitter) {\n        this.setMeta('property=\"twitter:title\"', title);\n      }\n      if (this.settings.auto.og) {\n        return this.setMeta('property=\"og:title\"', title);\n      }\n    }\n  },\n  setUrl: function(url) {\n    if (_.indexOf(this.settings.auto.set, 'url') !== -1) {\n      if (this.settings.auto.twitter) {\n        this.setMeta('property=\"twitter:url\"', url);\n      }\n      if (this.settings.auto.og) {\n        return this.setMeta('property=\"og:url\"', url);\n      }\n    }\n  },\n  setLink: function(rel, href, unique) {\n    var h, _i, _len;\n    if (unique == null) {\n      unique = true;\n    }\n    if (unique) {\n      this.removeLink(rel);\n    }\n    if (_.isArray(href)) {\n      for (_i = 0, _len = href.length; _i < _len; _i++) {\n        h = href[_i];\n        this.setLink(rel, h, false);\n      }\n      return;\n    }\n    if (href) {\n      return $('head').append(\"<link rel='\" + rel + \"' href='\" + href + \"'>\");\n    }\n  },\n  removeLink: function(rel) {\n    return $(\"link[rel='\" + rel + \"']\").remove();\n  },\n  setMeta: function(attr, content, unique) {\n    var name, v, _i, _len;\n    if (unique == null) {\n      unique = true;\n    }\n    if (unique) {\n      this.removeMeta(attr);\n    }\n    if (_.isArray(content)) {\n      for (_i = 0, _len = content.length; _i < _len; _i++) {\n        v = content[_i];\n        this.setMeta(attr, v, false);\n      }\n      return;\n    }\n    if (!content) {\n      return;\n    }\n    content = escapeHtmlAttribute(content);\n    $('head').append(\"<meta \" + attr + \" content='\" + content + \"'>\");\n    name = attr.replace(/\"|'/g, '').split('=')[1];\n    if (_.indexOf(this.settings.auto.set, name) !== -1) {\n      if (this.settings.auto.twitter) {\n        this.setMeta(\"property='twitter:\" + name + \"'\", content);\n      }\n      if (this.settings.auto.og) {\n        return this.setMeta(\"property='og:\" + name + \"'\", content);\n      }\n    }\n  },\n  removeMeta: function(attr) {\n    return $(\"meta[\" + attr + \"]\").remove();\n  }\n};\n\nthis.SEO = SEO;\n\nescapeHtmlAttribute = function(string) {\n  return (\"\" + string).replace(/'/g, \"&apos;\").replace(/\"/g, \"&quot;\");\n};\n\ngetCurrentRouteName = function() {\n  var routeName, router;\n  router = Router.current();\n  if (!router) {\n    return;\n  }\n  routeName = router.route.getName();\n  return routeName;\n};\n\nDeps.autorun(function() {\n  var currentRouteName;\n  currentRouteName = getCurrentRouteName();\n  if (!currentRouteName) {\n    return;\n  }\n  return Meteor.subscribe('seoByRouteName', currentRouteName);\n});\n\nDeps.autorun(function() {\n  var currentRouteName, settings;\n  if (!SEO) {\n    return;\n  }\n  currentRouteName = getCurrentRouteName();\n  settings = SeoCollection.findOne({\n    route_name: currentRouteName\n  }) || {};\n  return SEO.set(settings);\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}}]